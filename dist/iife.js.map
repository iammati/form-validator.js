{"version":3,"file":"iife.js","sources":["../src/JavaScript/Validator/Validate/Email.js","../src/JavaScript/Validator/Validate/Phone.js","../src/JavaScript/Validator/FormValidator.js","../src/JavaScript/iife.js"],"sourcesContent":["export default function validateEmail(value) {\n    return !(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value));\n}\n","export default function validatePhone(value) {\n    return false;\n}\n","import validateEmail from './Validate/Email';\nimport validatePhone from './Validate/Phone';\n\n/**\n * @name FormValidator\n * @description A lightweight vanilla-js form-validator.\n * Its email-validation is based on RFC3696\n * @author Mati Sediqi<mati_01@icloud.com>\n */\nexport default class FormValidator {\n    classList = {\n        error: 'fv-error',\n        valid: 'fv-valid',\n    };\n\n    collection = [];\n\n    /**\n     * @param {HTMLFormElement} form The form-element to be validated.\n     */\n    constructor (form, novalidate = true) {\n        if (novalidate) {\n            form.setAttribute('novalidate', '');\n        }\n\n        const fields = form.querySelectorAll('input:not([type=submit]), select');\n\n        fields.forEach(field => {\n            field.addEventListener('blur', e => {\n                if (e.currentTarget.value.length !== 0) {\n                    this.handleValidation(e.currentTarget, this.validate(e.currentTarget));\n                }\n            });\n\n            field.addEventListener('keyup', e => {\n                if (e.currentTarget.classList.contains(this.classList.error) ||\n                    e.currentTarget.classList.contains(this.classList.valid)\n                ) {\n                    this.handleValidation(e.currentTarget, this.validate(e.currentTarget));\n                }\n            });\n        });\n\n        form.addEventListener('change', e => {\n            this.handleValidation(e.target, this.validate(e.target), e);\n        });\n\n        form.addEventListener('submit', e => {\n            fields.forEach(field => {\n                this.handleValidation(field, this.validate(field), e);\n            });\n        });\n    }\n\n    /**\n     * @description Validating a single (just like you) field of a form-element.\n     * @param {HTMLInputElement|HTMLSelectElement} field \n     * @returns {Boolean}\n     */\n    validate = field => {\n        const { \n            type,\n            value,\n            minlength,\n            maxlength,\n            required,\n        } = field;\n\n        const length = value.length;\n\n        // Validation for min-, maxlength and required\n        if (minlength || \n            maxlength || \n            required\n        ) {\n            // Check here if length is smaller than minlength,\n            // length exceeds maxlength or\n            // length just equals 0 AND required is present\n            if (length < minlength || \n                length > maxlength || \n                (length === 0 && required)\n            ) {\n                return false;\n            }\n        }\n\n        // Validation for select\n        if (field.tagName === 'SELECT') {\n            const selectedOption = field.querySelector('option[selected]');\n            const { disabled } = selectedOption;\n\n            if ((required || disabled) && length === 0) {\n                return false;\n            }\n        }\n\n        // Validation for email\n        if (type === 'email') {\n            return !validateEmail(value);\n        }\n\n        // Validation for phone\n        if (type === 'tel') {\n            return !validatePhone(value);\n        }\n\n        return true;\n    }\n\n    handleValidation = (field, valid, e = null) => {\n        if (valid === false) {\n            if (e !== null) {\n                e.preventDefault();\n            }\n\n            !field.classList.contains(this.classList.error) && field.classList.add(this.classList.error);\n            field.classList.contains(this.classList.valid) && field.classList.remove(this.classList.valid);\n\n            return console.error(field);\n        }\n\n        field.classList.contains(this.classList.error) && field.classList.remove(this.classList.error);\n        !field.classList.contains(this.classList.valid) && field.classList.add(this.classList.valid);\n    }\n}\n","import '../Scss/app.scss';\nimport FormValidator from './Validator/FormValidator';\n\nwindow.addEventListener('load', e => {\n    const forms = document.querySelectorAll('form[data-smedia-validate=\"1\"]');\n\n    if (forms.length === 0) {\n        return;\n    }\n\n    forms.forEach(node => {\n        new FormValidator(node);\n    });\n});\n"],"names":["validateEmail","value","validatePhone","FormValidator","form","novalidate","__publicField","field","type","minlength","maxlength","required","length","selectedOption","disabled","valid","e","fields","forms","node"],"mappings":"wKAAe,SAASA,EAAcC,EAAO,CACzC,MAAO,CAAE,gDAAgD,KAAKA,CAAK,CACvE,CCFe,SAASC,EAAcD,EAAO,CACzC,MAAO,EACX,CCOe,MAAME,CAAc,CAW/B,YAAaC,EAAMC,EAAa,GAAM,CAVtCC,EAAA,iBAAY,CACR,MAAO,WACP,MAAO,UACf,GAEIA,EAAA,kBAAa,CAAA,GA4CbA,EAAA,gBAAWC,GAAS,CAChB,KAAM,CACF,KAAAC,EACA,MAAAP,EACA,UAAAQ,EACA,UAAAC,EACA,SAAAC,CACH,EAAGJ,EAEEK,EAASX,EAAM,OAGrB,IAAIQ,GACAC,GACAC,KAKIC,EAASH,GACTG,EAASF,GACRE,IAAW,GAAKD,GAEjB,MAAO,GAKf,GAAIJ,EAAM,UAAY,SAAU,CAC5B,MAAMM,EAAiBN,EAAM,cAAc,kBAAkB,EACvD,CAAE,SAAAO,CAAU,EAAGD,EAErB,IAAKF,GAAYG,IAAaF,IAAW,EACrC,MAAO,EAEd,CAGD,OAAIJ,IAAS,QACF,CAACR,EAAcC,CAAK,EAI3BO,IAAS,MACF,CAACN,EAAmB,EAGxB,EACV,GAEDI,EAAA,wBAAmB,CAACC,EAAOQ,EAAOC,EAAI,OAAS,CAC3C,GAAID,IAAU,GACV,OAAIC,IAAM,MACNA,EAAE,eAAc,EAGpB,CAACT,EAAM,UAAU,SAAS,KAAK,UAAU,KAAK,GAAKA,EAAM,UAAU,IAAI,KAAK,UAAU,KAAK,EAC3FA,EAAM,UAAU,SAAS,KAAK,UAAU,KAAK,GAAKA,EAAM,UAAU,OAAO,KAAK,UAAU,KAAK,EAEtF,QAAQ,MAAMA,CAAK,EAG9BA,EAAM,UAAU,SAAS,KAAK,UAAU,KAAK,GAAKA,EAAM,UAAU,OAAO,KAAK,UAAU,KAAK,EAC7F,CAACA,EAAM,UAAU,SAAS,KAAK,UAAU,KAAK,GAAKA,EAAM,UAAU,IAAI,KAAK,UAAU,KAAK,CAC9F,GAtGOF,GACAD,EAAK,aAAa,aAAc,EAAE,EAGtC,MAAMa,EAASb,EAAK,iBAAiB,kCAAkC,EAEvEa,EAAO,QAAQV,GAAS,CACpBA,EAAM,iBAAiB,OAAQS,GAAK,CAC5BA,EAAE,cAAc,MAAM,SAAW,GACjC,KAAK,iBAAiBA,EAAE,cAAe,KAAK,SAASA,EAAE,aAAa,CAAC,CAEzF,CAAa,EAEDT,EAAM,iBAAiB,QAASS,GAAK,EAC7BA,EAAE,cAAc,UAAU,SAAS,KAAK,UAAU,KAAK,GACvDA,EAAE,cAAc,UAAU,SAAS,KAAK,UAAU,KAAK,IAEvD,KAAK,iBAAiBA,EAAE,cAAe,KAAK,SAASA,EAAE,aAAa,CAAC,CAEzF,CAAa,CACb,CAAS,EAEDZ,EAAK,iBAAiB,SAAU,GAAK,CACjC,KAAK,iBAAiB,EAAE,OAAQ,KAAK,SAAS,EAAE,MAAM,EAAG,CAAC,CACtE,CAAS,EAEDA,EAAK,iBAAiB,SAAU,GAAK,CACjCa,EAAO,QAAQV,GAAS,CACpB,KAAK,iBAAiBA,EAAO,KAAK,SAASA,CAAK,EAAG,CAAC,CACpE,CAAa,CACb,CAAS,CACJ,CAwEL,CCzHA,OAAO,iBAAiB,OAAQS,GAAK,CACjC,MAAME,EAAQ,SAAS,iBAAiB,gCAAgC,EAEpEA,EAAM,SAAW,GAIrBA,EAAM,QAAQC,GAAQ,CAClB,IAAIhB,EAAcgB,CAAI,CAC9B,CAAK,CACL,CAAC"}